# Generated by Django 5.0.6 on 2024-05-26 17:08

import src.commons.enums.roles_enum
import src.commons.enums.store_names_enum
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firstName', models.CharField(verbose_name='First name')),
                ('lastName', models.CharField(verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Of The user')),
                ('store', models.CharField(choices=src.commons.enums.store_names_enum.StoresEnum.choices(), verbose_name='Sore Assigned to User')),
                ('role', models.CharField(choices=src.commons.enums.roles_enum.RolesEnum.choices(), verbose_name='Role assigned to the user')),
                ('password', models.CharField(verbose_name='Password')),
                ('refreshToken', models.CharField(verbose_name='Refresh token')),
                ('emailVerified', models.BooleanField(default=False, verbose_name='Is The email of user verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
